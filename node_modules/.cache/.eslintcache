[{"C:\\Users\\Jernej\\Documents\\GitHub\\drevesko\\src\\index.js":"1","C:\\Users\\Jernej\\Documents\\GitHub\\drevesko\\src\\reportWebVitals.js":"2","C:\\Users\\Jernej\\Documents\\GitHub\\drevesko\\src\\components\\App.js":"3","C:\\Users\\Jernej\\Documents\\GitHub\\drevesko\\src\\store\\index.js":"4","C:\\Users\\Jernej\\Documents\\GitHub\\drevesko\\src\\components\\DreveskoList.js":"5","C:\\Users\\Jernej\\Documents\\GitHub\\drevesko\\src\\components\\DreveskoActionButton.js":"6","C:\\Users\\Jernej\\Documents\\GitHub\\drevesko\\src\\actions\\index.js":"7","C:\\Users\\Jernej\\Documents\\GitHub\\drevesko\\src\\reducers\\index.js":"8","C:\\Users\\Jernej\\Documents\\GitHub\\drevesko\\src\\components\\DreveskoCard.js":"9","C:\\Users\\Jernej\\Documents\\GitHub\\drevesko\\src\\actions\\listActions.js":"10","C:\\Users\\Jernej\\Documents\\GitHub\\drevesko\\src\\actions\\cardActions.js":"11","C:\\Users\\Jernej\\Documents\\GitHub\\drevesko\\src\\reducers\\listReducer.js":"12","C:\\Users\\Jernej\\Documents\\GitHub\\drevesko\\src\\components\\DreveskoEditButton.js":"13","C:\\Users\\Jernej\\Documents\\GitHub\\drevesko\\src\\components\\DreveskoDeleteButton.js":"14"},{"size":608,"mtime":1684366073141,"results":"15","hashOfConfig":"16"},{"size":375,"mtime":1684366073142,"results":"17","hashOfConfig":"16"},{"size":2176,"mtime":1684366073139,"results":"18","hashOfConfig":"16"},{"size":145,"mtime":1684366073143,"results":"19","hashOfConfig":"16"},{"size":1535,"mtime":1684366073141,"results":"20","hashOfConfig":"16"},{"size":5268,"mtime":1684366073139,"results":"21","hashOfConfig":"16"},{"size":246,"mtime":1684366073138,"results":"22","hashOfConfig":"16"},{"size":149,"mtime":1684366073141,"results":"23","hashOfConfig":"16"},{"size":1681,"mtime":1684366073140,"results":"24","hashOfConfig":"16"},{"size":586,"mtime":1684366073139,"results":"25","hashOfConfig":"16"},{"size":533,"mtime":1684366073138,"results":"26","hashOfConfig":"16"},{"size":5126,"mtime":1684366073142,"results":"27","hashOfConfig":"16"},{"size":3837,"mtime":1684366073140,"results":"28","hashOfConfig":"16"},{"size":843,"mtime":1684366073140,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"geaity",{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},"C:\\Users\\Jernej\\Documents\\GitHub\\drevesko\\src\\index.js",[],[],"C:\\Users\\Jernej\\Documents\\GitHub\\drevesko\\src\\reportWebVitals.js",[],[],"C:\\Users\\Jernej\\Documents\\GitHub\\drevesko\\src\\components\\App.js",["77","78","79"],[],"import React, { Component } from 'react';\r\nimport DreveskoList from './DreveskoList';\r\nimport { connect } from 'react-redux';\r\nimport DreveskoActionButton from './DreveskoActionButton';\r\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\r\nimport { sort } from \"../actions\";\r\nimport styled from 'styled-components';\r\nimport './App.css';\r\nimport { Icon, ListItem, ListItemIcon } from '@mui/material';\r\nconst ListContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n`\r\n\r\nclass App extends Component {\r\n  \r\n  onDragEnd = (result) =>{\r\n    const { destination, source, draggableId, type} = result;\r\n    \r\n    if(!destination) {\r\n      return;\r\n    }\r\n\r\n    this.props.dispatch(sort(\r\n      source.droppableId,\r\n      destination.droppableId,\r\n      source.index,\r\n      destination.index,\r\n      draggableId,\r\n      type\r\n    ))\r\n  }\r\n  \r\n  render() {\r\n    const { lists } = this.props;\r\n    return (\r\n      <DragDropContext onDragEnd={this.onDragEnd}>\r\n        <div className=\"App\">\r\n        <div class=\"container\">\r\n        <nav class=\"navbar\">\r\n          <ul class=\"nav--list\">\r\n            <li class=\"item\"><a href=\"da.com\">Projekt Drevesko</a></li>\r\n            \r\n        \r\n            <li class=\"item\"><a href=\"da.com\">Domov</a></li>\r\n            <li class=\"item\"><a href=\"da.com\">Neki</a></li>\r\n            <li class=\"item\"><a href=\"da.com\">Uporabnik</a></li>\r\n          </ul>\r\n        </nav>\r\n        </div>\r\n          <Droppable droppableId='full-site' direction=\"horizontal\" type=\"list\" >\r\n            {provided =>(\r\n              <ListContainer {...provided.droppableProps} ref={provided.innerRef}>\r\n                { lists.map((list, index) => \r\n                  <DreveskoList listId={list.id} key={list.id} title={list.title} cards={list.cards} index={index} className=\"list-title\" />\r\n\r\n                )}\r\n                {provided.placeholder}\r\n                <DreveskoActionButton list />\r\n              </ListContainer>\r\n            )}\r\n          </Droppable>\r\n        </div>\r\n      </DragDropContext>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n  lists: state.lists\r\n})\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","C:\\Users\\Jernej\\Documents\\GitHub\\drevesko\\src\\store\\index.js",[],[],"C:\\Users\\Jernej\\Documents\\GitHub\\drevesko\\src\\components\\DreveskoList.js",[],[],"C:\\Users\\Jernej\\Documents\\GitHub\\drevesko\\src\\components\\DreveskoActionButton.js",["80"],[],"import React from \"react\";\r\nimport IconAdd from \"@mui/icons-material/Add\";\r\nimport IconClose from \"@mui/icons-material/Close\";\r\nimport { Button, Card } from \"@mui/material\";\r\nimport Textarea from \"react-textarea-autosize\"\r\nimport { connect } from \"react-redux\";\r\nimport { addList, addCard } from \"../actions\"\r\n\r\nclass DreveskoActionButton extends React.Component{\r\n\r\n    state = {\r\n        formOpen: false,\r\n        text: \"\",\r\n        text_opis: \"\"\r\n    };\r\n\r\n    openForm = () => {\r\n        this.setState({\r\n            formOpen: true\r\n        });\r\n    };\r\n\r\n    closeForm = e => {\r\n        this.setState({\r\n            formOpen: false,\r\n            text: \"\",\r\n            text_opis: \"\"\r\n        })\r\n    }\r\n\r\n    handleBlur = ({ currentTarget, relatedTarget }) => {\r\n        if (currentTarget.contains(relatedTarget)) return;\r\n        this.closeForm();\r\n        return;\r\n    }\r\n\r\n    handleInputChange = e =>{\r\n        this.setState({\r\n            text: e.target.value\r\n        })\r\n    }\r\n\r\n    handleInputChangeOpis = e =>{\r\n        this.setState({\r\n            text_opis: e.target.value\r\n        })\r\n    }\r\n\r\n\r\n    handleAddList = () => {\r\n        const { dispatch } = this.props;\r\n        const { text } = this.state;\r\n\r\n        if(text) {\r\n            this.setState({\r\n                text: \"\"\r\n            })\r\n            dispatch(addList(text));\r\n        }\r\n        return;\r\n    }\r\n\r\n    handleAddCard = () => {\r\n        const { dispatch, listId } = this.props;\r\n        const { text, text_opis } = this.state;\r\n        \r\n        if(text) {\r\n            this.setState({\r\n                text: \"\",\r\n                text_opis: \"\"\r\n            })\r\n            dispatch(addCard(listId, text, text_opis));\r\n        }\r\n        return;\r\n    }\r\n\r\n    renderAddButton = () => {\r\n        const { list } = this.props;\r\n\r\n        const buttonText = list ? \"Add another list\" : \"Add another card\";\r\n        const buttonTextOpacity = list ? 1 : 0.5;\r\n        const buttonTextColor = list ? \"white\" : \"inherit\";\r\n        const buttonTextBackground = list ? \"rgba(0,0,0,.15)\" : \"inherit\";\r\n\r\n        return(\r\n            <div id=\"add\" onClick={this.openForm}\r\n            style={{\r\n                ...styles.buttonContainer,\r\n                opacity: buttonTextOpacity,\r\n                color: buttonTextColor,\r\n                background: buttonTextBackground\r\n            }}>\r\n                <IconAdd/>\r\n                <p>{buttonText}</p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderForm = () => {\r\n        const { list } = this.props;\r\n        const placeholder = list ? \"Enter list title...\" : \"Enter title for this card...\";\r\n        const buttonTitle = list ? \"Add list\" : \"Add card\";\r\n        const opisInput = list ? \"none\" : \"block\";\r\n\r\n        return (\r\n            <div>\r\n            <Card\r\n                onBlur={this.handleBlur}\r\n                style={{\r\n                    overflow: \"visible\",\r\n                    minHeight: 80,\r\n                    minWidth: 272,\r\n                    padding: \"6px 8px 2px\",\r\n                }}\r\n                >\r\n                <Textarea\r\n                    id=\"title\"\r\n                    placeholder={placeholder}\r\n                    autoFocus\r\n                    \r\n                    value={this.state.text}\r\n                    onChange={this.handleInputChange}\r\n                    style={{\r\n                        overflow: \"hidden\",\r\n                        resize: \"none\",\r\n                        width: \"100%\",\r\n                        outline: \"none\",\r\n                        border: \"none\",\r\n                    }}\r\n                />\r\n\r\n                <Textarea\r\n                    id=\"opis\"\r\n                    placeholder={\"Vnesi opis...\"}\r\n                    autoFocus\r\n                    value={this.state.text_opis}\r\n                    onChange={this.handleInputChangeOpis}\r\n                    style={{\r\n                        display: list ? 'none' : 'block',\r\n                        overflow: \"hidden\",\r\n                        resize: \"none\",\r\n                        width: \"100%\",\r\n                        outline: \"none\",\r\n                        border: \"none\",\r\n                    }}\r\n                />\r\n            </Card>\r\n                <div style={styles.formButtonGroup}>\r\n                    <Button \r\n                        onMouseDown={ list ? this.handleAddList: this.handleAddCard}\r\n                        variant=\"contained\" \r\n                        style={{color: \"white\", backgroundColor: \"#5aac44\"}}>\r\n                    {buttonTitle}</Button>\r\n\r\n                    <IconClose onMouseDown={this.closeForm} style={{marginLeft: 8, cursor: \"pointer\"}} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return this.state.formOpen ? this.renderForm() : this.renderAddButton();\r\n    }\r\n\r\n}\r\n\r\nconst styles = {\r\n    buttonContainer: {\r\n        display: \"Flex\",\r\n        alignItems: \"center\",\r\n        cursor: \"pointer\",\r\n        borderRadious: 3,\r\n        height: 36,\r\n        width: 272,\r\n        paddingLeft: 10,\r\n        marginLeft: 10\r\n    },\r\n    formButtonGroup: {\r\n        marginTop: 8,\r\n        display: \"flex\",\r\n        alignItems: \"center\"\r\n    }\r\n}\r\n\r\n\r\nexport default connect() (DreveskoActionButton);","C:\\Users\\Jernej\\Documents\\GitHub\\drevesko\\src\\actions\\index.js",[],[],"C:\\Users\\Jernej\\Documents\\GitHub\\drevesko\\src\\reducers\\index.js",[],[],"C:\\Users\\Jernej\\Documents\\GitHub\\drevesko\\src\\components\\DreveskoCard.js",["81","82","83"],[],"import React from \"react\";\r\nimport Box from '@mui/material/Box';\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport { Draggable } from \"react-beautiful-dnd\";\r\nimport styled from 'styled-components';\r\nimport DreveskoEditButton from \"./DreveskoEditButton\";\r\nimport DreveskoDeleteButton from \"./DreveskoDeleteButton\";\r\n\r\nconst CardContainer = styled.div`\r\n  margin-bottom: 8px;\r\n  padding: 0px;\r\n  position: relative;\r\n\r\n  &:hover .buttons {\r\n    visibility: visible;\r\n  }\r\n\r\n  .buttons {\r\n    visibility: hidden;\r\n  }\r\n`;\r\n\r\n\r\nconst DreveskoCard = ({text_opis, text, cardId, index, listId}) =>{\r\n  return(\r\n    <Draggable draggableId={String(cardId)} index={index} >\r\n      {provided =>(\r\n        <CardContainer ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}>\r\n          <Card sx={{ background: 'rgba(255, 255, 255, 0.8);' }}>\r\n            <CardContent>\r\n              <Typography>\r\n                <b>{text}</b>\r\n                <hr></hr>\r\n              </Typography>\r\n              <Typography>\r\n                {text_opis}\r\n              </Typography>\r\n                <DreveskoEditButton cardId={cardId} listId={listId} text={text} text_opis={text_opis} /> \r\n              <div className=\"buttons\">\r\n                <DreveskoDeleteButton cardId={cardId} listId={listId}/>\r\n              </div>\r\n            </CardContent>\r\n          </Card>    \r\n        </CardContainer>\r\n      )}\r\n    </Draggable>\r\n  )\r\n}\r\n\r\n\r\nexport default DreveskoCard;\r\n","C:\\Users\\Jernej\\Documents\\GitHub\\drevesko\\src\\actions\\listActions.js",[],[],"C:\\Users\\Jernej\\Documents\\GitHub\\drevesko\\src\\actions\\cardActions.js",[],[],"C:\\Users\\Jernej\\Documents\\GitHub\\drevesko\\src\\reducers\\listReducer.js",["84"],[],"import { CONSTANTS } from \"../actions\";\r\nimport initialStateData from \"../data/initialState.json\";\r\n//import fs from 'fs';\r\n\r\n\r\n//console.log(initialStateData)\r\n\r\nlet listId = initialStateData.length;\r\nlet cardId = initialStateData.reduce((maxId, list) => {\r\n    return Math.max(maxId, list.cards.reduce((maxCardId, card) => {\r\n        return Math.max(maxCardId, parseInt(card.id.split(\"-\")[1]));\r\n    }, 0));\r\n}, 0) + 1;\r\n\r\n//console.log(\"length list\",listId)\r\n//console.log(\"length card\",cardId)\r\n\r\nconst initialState = listId > 0\r\n  ? initialStateData\r\n  : [\r\n      {\r\n        title: \"List 1\",\r\n        id: `list-${listId}`,\r\n        cards: [\r\n          {\r\n            id: `card-${cardId}`,\r\n            text: \"Card 1\",\r\n            text_opis: \"\",\r\n          },\r\n        ],\r\n      },\r\n    ];\r\n\r\n\r\nconst listReducer = (state = initialState, action) => {\r\n    switch (action.type){\r\n        case CONSTANTS.ADD_LIST:{\r\n            const newList = {\r\n                title: action.payload,\r\n                cards: [],\r\n                id: `list-${listId}`\r\n            }\r\n            listId += 1;\r\n            const newState = [...state, newList];\r\n            \r\n            //fs.writeFileSync('../data/initialState.json', JSON.stringify(newState));\r\n\r\n            //localStorage.setItem(\"state.json\", JSON.stringify(newState));\r\n            return newState;\r\n        }\r\n\r\n        case CONSTANTS.EDIT_CARD: {\r\n            const { text_opis, text, cardId, listId } = action.payload;\r\n            console.log(\"EDIT_CARD reducer called with:\", action.payload);\r\n        \r\n            const newState = state.map(list => {\r\n                if (list.id === listId) {\r\n                    const updatedCards = list.cards.map(card => {\r\n                        if (card.id === cardId) {\r\n                            return {\r\n                                ...card,\r\n                                text,\r\n                                text_opis,\r\n                            };\r\n                        }\r\n                        return card;\r\n                    });\r\n                    return {\r\n                        ...list,\r\n                        cards: updatedCards,\r\n                    };\r\n                }\r\n                return list;\r\n            });\r\n\r\n            return newState;\r\n        }\r\n        \r\n        case CONSTANTS.KILL_CARD:{\r\n            const { listId, cardId } = action.payload;\r\n            console.log(\"KILL_CARD reducer called with:\", action.payload);\r\n\r\n            const newState = state.map(list => {\r\n              if (list.id === listId) {\r\n                const updatedCards = list.cards.filter(card => card.id !== cardId);\r\n                return { ...list, cards: updatedCards };\r\n              }\r\n              return list;\r\n            });\r\n\r\n            return newState;\r\n        }\r\n          \r\n\r\n        case CONSTANTS.ADD_CARD:{\r\n            const newCard = {\r\n                text: action.payload.text,\r\n                text_opis: action.payload.text_opis,\r\n                id: `card-${cardId}`\r\n            }\r\n            cardId += 1;\r\n\r\n            const newState = state.map(list => {\r\n                if(list.id === action.payload.listId){\r\n                    return {\r\n                        ...list,\r\n                        cards: [...list.cards, newCard]\r\n                    }\r\n                } else{\r\n                    return list;\r\n                }\r\n            })\r\n            return newState;\r\n        }\r\n\r\n        case CONSTANTS.DRAG_HAPPENED:{\r\n            const {\r\n                droppableIdStart,\r\n                droppableIdEnd,\r\n                droppableIndexStart,\r\n                droppableIndexEnd,\r\n                draggableId,\r\n                type\r\n            } = action.payload;\r\n\r\n            const newState = [...state];\r\n\r\n            //dragging lists around\r\n            if(type === \"list\") {\r\n                const list = newState.splice(droppableIndexStart, 1);\r\n                newState.splice(droppableIndexEnd, 0, ...list);\r\n                return newState;\r\n            }\r\n\r\n            //in the same list\r\n            if(droppableIdStart === droppableIdEnd){\r\n                const list = state.find(list => droppableIdStart === list.id);\r\n                const card = list.cards.splice(droppableIndexStart, 1);\r\n                list.cards.splice(droppableIndexEnd, 0, ...card)\r\n            }\r\n            // other list\r\n            if(droppableIdStart !== droppableIdEnd){\r\n                //find the list where the drag happened\r\n                const listStart = state.find(list => droppableIdStart === list.id); \r\n                //pull out the card from the list\r\n                const card = listStart.cards.splice(droppableIndexStart, 1);\r\n                //find the list when drag ended\r\n                const listEnd = state.find(list => droppableIdEnd === list.id);\r\n                //put the card in the list\r\n                listEnd.cards.splice(droppableIndexEnd, 0, ...card);\r\n            }\r\n\r\n            return newState;\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default listReducer;","C:\\Users\\Jernej\\Documents\\GitHub\\drevesko\\src\\components\\DreveskoEditButton.js",[],[],"C:\\Users\\Jernej\\Documents\\GitHub\\drevesko\\src\\components\\DreveskoDeleteButton.js",["85"],[],"import React from \"react\";\r\nimport IconDelete from \"@mui/icons-material/Delete\";\r\nimport { Button } from \"@mui/material\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteCard } from \"../actions\";\r\n\r\nclass DreveskoDeleteButton extends React.Component {\r\n    handleDeleteCard = () => {\r\n        const { dispatch, listId, cardId } = this.props;\r\n        dispatch(deleteCard(listId, cardId));\r\n      };\r\n\r\n  renderDeleteButton = () => {\r\n    return (\r\n      <div\r\n        id=\"delete\"\r\n        onClick={this.handleDeleteCard}\r\n        style={{\r\n          position: \"absolute\",\r\n          bottom: 6,\r\n          right: 6,\r\n          cursor: \"pointer\",\r\n        }}\r\n      >\r\n        <IconDelete />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return this.renderDeleteButton();\r\n  }\r\n}\r\n\r\nexport default connect()(DreveskoDeleteButton);\r\n\r\n",{"ruleId":"86","severity":1,"message":"87","line":9,"column":10,"nodeType":"88","messageId":"89","endLine":9,"endColumn":14},{"ruleId":"86","severity":1,"message":"90","line":9,"column":16,"nodeType":"88","messageId":"89","endLine":9,"endColumn":24},{"ruleId":"86","severity":1,"message":"91","line":9,"column":26,"nodeType":"88","messageId":"89","endLine":9,"endColumn":38},{"ruleId":"86","severity":1,"message":"92","line":103,"column":15,"nodeType":"88","messageId":"89","endLine":103,"endColumn":24},{"ruleId":"86","severity":1,"message":"93","line":2,"column":8,"nodeType":"88","messageId":"89","endLine":2,"endColumn":11},{"ruleId":"86","severity":1,"message":"94","line":4,"column":8,"nodeType":"88","messageId":"89","endLine":4,"endColumn":19},{"ruleId":"86","severity":1,"message":"95","line":6,"column":8,"nodeType":"88","messageId":"89","endLine":6,"endColumn":14},{"ruleId":"86","severity":1,"message":"96","line":122,"column":17,"nodeType":"88","messageId":"89","endLine":122,"endColumn":28},{"ruleId":"86","severity":1,"message":"95","line":3,"column":10,"nodeType":"88","messageId":"89","endLine":3,"endColumn":16},"no-unused-vars","'Icon' is defined but never used.","Identifier","unusedVar","'ListItem' is defined but never used.","'ListItemIcon' is defined but never used.","'opisInput' is assigned a value but never used.","'Box' is defined but never used.","'CardActions' is defined but never used.","'Button' is defined but never used.","'draggableId' is assigned a value but never used."]